generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique
  email     String?  @unique
  name      String?
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())
}

model MenuItem {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  price         Float
  description   String?
  image         String?
  category      String
  isRecommended Boolean     @default(false)
  isActive      Boolean     @default(true)
  isOrderable   Boolean     @default(false)
  isOnMainPage  Boolean     @default(false)
  orders        OrderItem[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@index([name, category])
}

model Order {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  phone           String
  city            String?
  postalCode      String?
  street          String?
  buildingNumber  String?
  apartment       Int?
  nip             String?
  deliveryMethod  DeliveryMethod
  paymentMethod   String
  deliveryTime    DateTime
  items           OrderItem[]
  totalAmount     Float
  finalAmount     Float?
  status          OrderStatus    @default(PENDING)
  statusUpdatedAt DateTime       @default(now())
  notifiedAt      DateTime?
  comment         String?
  promoCode       PromoCode?     @relation(fields: [promoCodeId], references: [id])
  promoCodeId     String?        @db.ObjectId
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
}

model OrderItem {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity   Int
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
  menuItemId String   @db.ObjectId
  order      Order    @relation(fields: [orderId], references: [id])
  orderId    String   @db.ObjectId
}

model PromoCode {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  code          String       @unique
  discountType  DiscountType
  discountValue Float
  isActive      Boolean      @default(true)
  isOneTimeUse  Boolean      @default(false)
  isUsed        Boolean      @default(false)
  expiresAt     DateTime?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  orders        Order[]
}

model Banner {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  imageUrl  String
  linkUrl   String?
  position  Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Settings {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  isOrderingOpen Boolean  @default(true)
  orderWaitTime  Int      @default(30)
  deliveryCost   Int      @default(0)
  updatedAt      DateTime @updatedAt
  createdAt      DateTime @default(now())
}

enum OrderStatus {
  PENDING
  ACCEPTED
  IN_PROGRESS
  READY
  DELIVERING
  DELIVERED
  COMPLETED
  CANCELLED
}

enum DeliveryMethod {
  DELIVERY
  TAKE_OUT
}

enum DiscountType {
  FIXED
  PERCENTAGE
}
